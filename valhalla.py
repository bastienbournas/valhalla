#!/usr/bin/python
import random
import argparse

def banner():
    print("\
              .__  .__           .__  .__          \n\
___  _______  |  | |  |__ _____  |  | |  | _____   \n\
\  \/ /\__  \ |  | |  |  \\__  \ |  | |  | \__  \  \n\
 \   /  / __ \|  |_|   Y  \/ __ \|  |_|  |__/ __ \_\n\
  \_/  (____  /____/___|  (____  /____/____(____  /\n\
            \/          \/     \/               \/ \n\
    ")
    randomValue = random.randint(0, 2)
    if (randomValue == 0):
        print("\
    ,   |\ ,__\n\
    |\   \/   `.\n\
    \ `-.:.     `\n\
     `-.__ `\=====|\n\
        /=`'/   ^_\n\
      .'   /\   .=)\n\
   .-'  .'|  '-(/_|\n\
 .'  __(  \  .'`\n\
/_.'`  `.  |`\n\
          \ |\n\
          |/\n\
        ")
    elif (randomValue == 1):
        print("\
     _.-._\n\
   .' | | `.\n\
  /   | |   \n\
 |    | |    |\n\
 |____|_|____|\n\
 |____(_)____|\n\
 /|(o)| |(o)|\\\n\
//|   | |   |\\\\\n\
'/|  (|_|)  |\`\n\
 //.///|\\\\\\.\\\\\n\
 /////---\\\\\\\\\\ \n\
 ////|||||\\\\\\\\\n\
 '//|||||||\\\\`\n\
   '|||||||`\n\
        ")
    elif (randomValue == 2):
        print("\
                                   ||`-.___\n\
                                   ||    _.>\n\
                                   ||_.-'\n\
               ==========================================\n\
                `.:::::::.       `:::::::.       `:::::::.\n\
                  \:::::::.        :::::::.        :::::::\\\n\
                   L:::::::         :::::::         :::::::L\n\
                   J::::::::        ::::::::        :::::::J\n\
                    F:::::::        ::::::::        ::::::::L\n\
                    |:::::::        ::::::::        ::::::::|\n\
                    |:::::::        ::::::::        ::::::::|     .---.\n\
   .'_ \\            |:::::::        ::::::::        ::::::::|     \\ `--'\n\
   (( ) |           |:::::::        ::::::::        ::::::::|      \\ `.\n\
    `/ /            |:::::::        ::::::::        ::::::::|       L  \\\n\
    / /             |:::::::        ::::::::        ::::::::|       |   \\\n\
   J J              |:::::::        ::::::::        ::::::::|       |    L\n\
   | |              |:::::::        ::::::::        ::::::::|       |    |\n\
   | |              |:::::::        ::::::::        ::::::::|       F    |\n\
   | J\             F:::::::        ::::::::        ::::::::F      /     |\n\
   |  L\           J::::::::       .::::::::       .:::::::J      /      F\n\
   J  J `.     .   F:::::::        ::::::::        ::::::::F    .'      J\n\
    L  \  `.  //  /:::::::'      .::::::::'      .::::::::/   .'        F\n\
    J   `.  `//_..---.   .---.   .---.   .---.   .---.   <---<         J\n\
     L    `-//_=/  _  \=/  _  \=/  _  \=/  _  \=/  _  \=/  _  \       /\n\
     J     /|  |  (_)  |  (_)  |  (_)  |  (_)  |  (_)  |  (_)  |     /\n\
      \   / |   \     //\     //\     //\     //\     //\     /    .'\n\
       \ / /     `---//  `---//  `---//  `---//  `---//  `---'   .'\n\
________/_/_________//______//______//______//______//_________.'_________\n\
##########################################################################\n\
        ")


if __name__ == "__main__":
    text = 'Valhalla is a binary exploitation tool allowing to make basic buffer overflow faster and easier.'
    parser = argparse.ArgumentParser(description=text)
    parser.add_argument("-V", "--version", help="show program version", action="store_true")
    parser.add_argument("-s", "--silent", help="hide beautiful viking banner", action="store_true")
    parser.add_argument("-H", "--host", help="set the ip address where programm is hosted")
    args = parser.parse_args()

    if not (args.silent):
        banner()
    if (args.version):
        print ("Valhalla version 0.1")
    